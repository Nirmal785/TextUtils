{"ast":null,"code":"var _jsxFileName = \"/Users/dhaval/TextUtils/my-app/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [Text, setText] = useState(\"Enter Text Here\");\n  const handleUpClick = () => {\n    let newText = Text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.Heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"form-control\",\n      id: \"mybox\",\n      value: Text,\n      onChange: handleOnChange,\n      rows: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary my-3\",\n      onClick: handleUpClick,\n      children: \"convert to Uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(TextForm, \"tbzU5mnaRchp30DuRqZOKlNljbo=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","props","_s","Text","setText","handleUpClick","newText","toUpperCase","handleOnChange","event","target","value","className","children","Heading","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/dhaval/TextUtils/my-app/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n\n    const [Text, setText] = useState(\"Enter Text Here\");\n    const handleUpClick = () => {\n        let newText = Text.toUpperCase();\n        setText(newText)\n    }\n    const handleOnChange = (event) => {\n        setText(event.target.value)\n    }\n    \n    return (\n        <div className=\"mb-3\">\n            <h1>{props.Heading}</h1>\n            <textarea className=\"form-control\" id=\"mybox\"  value={Text} onChange={handleOnChange} rows=\"9\"></textarea>\n            <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>convert to Uppercase</button>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,iBAAiB,CAAC;EACnD,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIC,OAAO,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC;IAChCH,OAAO,CAACE,OAAO,CAAC;EACpB,CAAC;EACD,MAAME,cAAc,GAAIC,KAAK,IAAK;IAC9BL,OAAO,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACIZ,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBd,OAAA;MAAAc,QAAA,EAAKZ,KAAK,CAACa;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBnB,OAAA;MAAUa,SAAS,EAAC,cAAc;MAACO,EAAE,EAAC,OAAO;MAAER,KAAK,EAAER,IAAK;MAACiB,QAAQ,EAAEZ,cAAe;MAACa,IAAI,EAAC;IAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC1GnB,OAAA;MAAQa,SAAS,EAAC,sBAAsB;MAACU,OAAO,EAAEjB,aAAc;MAAAQ,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7F,CAAC;AAEd;AAAChB,EAAA,CAlBuBF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}